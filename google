##!/bin/bash

browser="google-chrome"
bookmarks=~/.config/google-chrome/Default/Bookmarks
logfile=~/tmp/google-script.log
mkdir -p ~/tmp/
touch $logfile
mode="d"
DEBUG=true
homepage='google.ca/'

bookmarks=./Bookmarks
# set -vx

usage="\
Usage: $(basename $0) [OPTIONS] URL
Browser wrapper script. With no options given, google searches the URL string.
  -s URL        Google search URL (implied with single commands)
  -l URL        Google lucky search URL
  -f FILE       Open FILE with google-chrome
  -b BOOKMARK   Search for bookmark instead of URL
  -w URL        Use URL as address instead of google searching
  -c            Curl the url instead
  -n            Start in a new window
  -o OPTIONS    Pass in OPTIONS to google-chrome. Quote for multiple arguments
  -v            Print the full url to console before opening
  -D            Run with '--disable-web-security' flag (development)
  -h            Show this menu

  deprecated:
  -B BROWSER    Set browser to BROWSER (default google-chrome)
  -M BOOKMARKS  Use file BOOKMARKS to search for bookmarks (default:
                ~/.config/google-chrome.Default/Bookmarks)
"

argsUntilNextOpt() {
  opts=-[dlfbwcnovDhBM]
  n=0
  str=
  shift
  # set -x
  while ! [[ "$1" =~ ^$opts ]] && [ ! -z "$1" ]; do
    # x="$1"
    str=$str" $1"
    shift
    ((n++))
  done
  ((n++))
  echo $n "$str"
  # set +x
}

# escapeQuote() {
#   x="$@"
#   echo '=> '$x
#   echo $(eval $x)
# }

# could do optStack too
curlmode=false
silent=false
options=
declare -a urlStack
declare -a optStack
stackIndex=0
verbose=false
argind=0

arguments=("$@")

if [ $# == 0 ]; then
  urlStack[$stackIndex]="$homepage"
  ((stackIndex++))
fi

while [ "${arguments[argind]:0:1}" == "-" ]; do
  arg="${arguments[argind]}"
  echo '=> arg='$arg
  for ((i = 1; i < ${#arg}; i++)); do
    case ${arg:$i:1} in
      l | b | w | s)
        mode=${arg:$i:1}
        echo ${arguments[@]}
        res=($(argsUntilNextOpt ${arguments[@]}))
        argind=$((argind + ${res[0]}))
        echo $argind
        case $mode in
          l)
            urlStack[$stackIndex]="${homepage}search?btnI=1&q=""${res[*]:1}";;
          b)
            line=$(egrep -A 4 "\"name\":\ \"${res[*]:1}\"" "$bookmarks" |grep -o "\"url\": \".*\"")
            url=$(echo $line |cut -d '"' -f4)
            if [ "$url" == "" ]; then
              echo Could not find bookmark \'${res[*]:1}\'
              exit 1
            fi
            urlStack[$stackIndex]=$url
          ;;
          w) urlStack[$stackIndex]="${res[*]:1}";;
          s) urlStack[$stackIndex]="${homepage}#q=${res[*]:1}";;
        esac
        ((stackIndex++))
      ;;
      f)
        urlStack[$stackIndex]="${arguments[$argind + 1]}"
        ((stackIndex++))
        ((argind++))
        [[ ${#arg} == 2 ]] && ((argind++))
      ;;

      D)
        optStack[$stackIndex]="--disable-web-security ${optStack[$stackIndex]}"
        if [[ ${#arg} == 2 ]]; then
          ((argind++))
        fi
      ;;
      n)
        optStack[$stackIndex]="--new-window ${optStack[$stackIndex]}"
        if [[ ${#arg} == 2 ]]; then
          ((argind++))
        fi
      ;;
      o)
        # echo "$2 ${optStack[$stackIndex]}"
        optStack[$stackIndex]="$2 ${optStack[$stackIndex]}"
        ((argind++))
        if [[ ${#arg} == 2 ]]; then
          ((argind++))
        fi
      ;;

      c) curlmode=true && [[ ${#arg} == 2 ]] && ((argind++));;
      B) browser="$2" && ((argind++)) && [[ ${#arg} == 2 ]] && ((argind++));;
      M) bookmarks="$2" && ((argind++)) && [[ ${#arg} == 2 ]] && ((argind++));;
      h) echo "$usage" && exit 1;;
      # s) silent=true && [[ ${#arg} == 2 ]] && ((argind++));;
      v) verbose=true && [[ ${#arg} == 2 ]] && ((argind++));;
      *) echo "Unknow option \`$1'. Try $(basename $0) -h for more info" && exit 1;;
    esac
  done
done

# Still url to parse
if [ ! -z $1 ]; then
  urlStack[$stackIndex]='${homepage}#q='"$*"
  ((stackIndex++))
# Options given but no url
elif [ "$stackIndex" -eq 0 ] && [ ! -z "$optStack[$stackIndex]" ]; then
  ((stackIndex++))
fi

if $curlmode; then
  exit 1
  echo "Opening: $url"
  for ((i = 0; i < stackIndex; i++)); do
    ${verbose} && echo "curl ${urlStack[$i]}"
    ${DEBUG} && echo "curl ${urlStack[$i]}" || \
    curl "${urlStack[$i]}"
  done
else
  for ((i = 0; i < stackIndex; i++)); do
    ${verbose} && echo "$browser ${optStack[$i]} ${urlStack[$i]}"
    ${DEBUG} && echo "$browser" "${optStack[$i]}" "${urlStack[$i]}" || \
    "$browser" "${optStack[$i]}" "${urlStack[$i]}" &>$logfile &
  done
fi
